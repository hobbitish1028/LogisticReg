// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <dplyr.h>
#include <Rcpp.h>

using namespace Rcpp;

// LogRegcpp
List LogRegcpp(NumericMatrix X, NumericVector x, NumericVector y, int maxit);
RcppExport SEXP _LogisticReg_LogRegcpp(SEXP XSEXP, SEXP xSEXP, SEXP ySEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(LogRegcpp(X, x, y, maxit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LogisticReg_LogRegcpp", (DL_FUNC) &_LogisticReg_LogRegcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_LogisticReg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
